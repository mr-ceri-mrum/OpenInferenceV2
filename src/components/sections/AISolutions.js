import React from 'react';
import styled from 'styled-components';
import Container from '../common/Container';
import Button from '../common/Button';

const SolutionsSection = styled.section`
  padding: 100px 0;
`;

const SolutionsContent = styled.div`
  display: flex;
  align-items: center;
  justify-content: space-between;
  
  @media (max-width: 992px) {
    flex-direction: column;
  }
`;

const SolutionsImage = styled.div`
  flex: 1;
  margin-right: 50px;
  
  @media (max-width: 992px) {
    margin-right: 0;
    margin-bottom: 40px;
    width: 100%;
  }
`;

const Image = styled.img`
  max-width: 100%;
  border-radius: 10px;
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
`;

const SolutionsText = styled.div`
  flex: 1;
`;

const Title = styled.h3`
  font-size: 36px;
  font-weight: 700;
  color: var(--dark-blue);
  margin-bottom: 20px;
`;

const Description = styled.p`
  color: #666;
  margin-bottom: 20px;
`;

const SolutionsList = styled.div`
  margin-top: 30px;
`;

const SolutionItem = styled.div`
  display: flex;
  align-items: flex-start;
  margin-bottom: 20px;
`;

const SolutionIcon = styled.span`
  margin-right: 15px;
  font-size: 24px;
  color: var(--primary-purple);
`;

const SolutionItemText = styled.div``;

const SolutionItemTitle = styled.h5`
  font-size: 18px;
  font-weight: 600;
  margin-bottom: 5px;
  color: var(--dark-blue);
`;

const SolutionItemDescription = styled.p`
  color: #666;
  margin-bottom: 0;
`;

const AISolutions = () => {
  const solutions = [
    {
      id: 1,
      icon: 'üîç',
      title: '–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫',
      description: '–°–∏—Å—Ç–µ–º—ã –ø–æ–∏—Å–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–Ω–∏–º–∞—é—Ç –Ω–∞–º–µ—Ä–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.'
    },
    {
      id: 2,
      icon: 'üí¨',
      title: '–ß–∞—Ç-–±–æ—Ç—ã –∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã',
      description: '–£–º–Ω—ã–µ –±–æ—Ç—ã, —Å–ø–æ—Å–æ–±–Ω—ã–µ –æ–±—â–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ —Ä–µ—à–∞—Ç—å –∏—Ö –∑–∞–¥–∞—á–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.'
    },
    {
      id: 3,
      icon: 'üìä',
      title: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö',
      description: '–°–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞ –±–æ–ª—å—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–Ω–¥–æ–≤ –∏ –ø—Ä–∏–Ω—è—Ç–∏—è –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã—Ö –±–∏–∑–Ω–µ—Å-—Ä–µ—à–µ–Ω–∏–π.'
    }
  ];

  return (
    <SolutionsSection id="ai-solutions">
      <Container>
        <SolutionsContent>
          <SolutionsImage>
            <Image src="/api/placeholder/500/400" alt="–ò–ò-—Ä–µ—à–µ–Ω–∏—è" />
          </SolutionsImage>
          
          <SolutionsText>
            <Title>–ù–∞—à–∏ –ò–ò-—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞</Title>
            <Description>
              Open Inference –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –Ω–∞ –±–∞–∑–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞,
              –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä—É—Ç–∏–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
              –∏ –ø–æ–≤—ã—à–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤.
            </Description>
            
            <SolutionsList>
              {solutions.map(solution => (
                <SolutionItem key={solution.id}>
                  <SolutionIcon>{solution.icon}</SolutionIcon>
                  <SolutionItemText>
                    <SolutionItemTitle>{solution.title}</SolutionItemTitle>
                    <SolutionItemDescription>{solution.description}</SolutionItemDescription>
                  </SolutionItemText>
                </SolutionItem>
              ))}
            </SolutionsList>
            
            <Button href="#contact">–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ</Button>
          </SolutionsText>
        </SolutionsContent>
      </Container>
    </SolutionsSection>
  );
};

export default AISolutions;
