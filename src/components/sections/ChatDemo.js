import React, { useState, useEffect, useRef } from 'react';
import styled from 'styled-components';
import Container from '../common/Container';

const ChatDemoSection = styled.section`
  padding: 80px 0;
  background-color: var(--white);
`;

const SectionTitle = styled.div`
  text-align: center;
  margin-bottom: 40px;
`;

const Title = styled.h2`
  font-size: 36px;
  font-weight: 700;
  color: var(--dark-blue);
  margin-bottom: 15px;
`;

const Subtitle = styled.p`
  color: #666;
  max-width: 700px;
  margin: 0 auto;
`;

const TabsContainer = styled.div`
  display: flex;
  justify-content: center;
  margin-bottom: 30px;
  
  @media (max-width: 768px) {
    flex-direction: column;
    align-items: center;
  }
`;

const TabButton = styled.button`
  background: ${props => props.active ? 'linear-gradient(135deg, var(--primary-blue), var(--primary-purple))' : 'var(--white)'};
  color: ${props => props.active ? 'var(--white)' : 'var(--dark-blue)'};
  border: 2px solid ${props => props.active ? 'transparent' : '#e1e1e1'};
  border-radius: 30px;
  padding: 12px 30px;
  font-size: 16px;
  font-weight: 600;
  margin: 0 10px;
  cursor: pointer;
  transition: var(--transition);
  
  &:hover {
    background: ${props => props.active ? 'linear-gradient(135deg, var(--primary-blue), var(--primary-purple))' : '#f5f5f5'};
  }
  
  @media (max-width: 768px) {
    margin: 10px 0;
    width: 80%;
  }
`;

const ChatContainer = styled.div`
  max-width: 600px;
  margin: 0 auto;
  background-color: #fef7f4;
  border-radius: 15px;
  overflow: hidden;
  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
`;

const ChatHeader = styled.div`
  background: linear-gradient(135deg, var(--primary-blue), var(--primary-purple));
  color: var(--white);
  padding: 20px;
  text-align: center;
`;

const ChatHeaderTitle = styled.h3`
  font-size: 22px;
  font-weight: 600;
  margin: 0;
`;

const ChatBody = styled.div`
  padding: 20px;
  height: 400px;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: 15px;
`;

const Message = styled.div`
  display: flex;
  margin-bottom: 15px;
  animation: ${props => props.isNew ? 'fadeIn 0.5s ease' : 'none'};
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
`;

const BotAvatar = styled.div`
  width: 40px;
  height: 40px;
  background-color: #f0f3ff;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 10px;
  flex-shrink: 0;
`;

const BotIcon = styled.div`
  color: var(--primary-purple);
  font-size: 20px;
`;

const UserAvatar = styled.div`
  width: 40px;
  height: 40px;
  background-color: #e6f7f2;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: 10px;
  flex-shrink: 0;
  order: 2;
`;

const UserIcon = styled.div`
  color: var(--primary-blue);
  font-size: 20px;
`;

const MessageContent = styled.div`
  flex: 1;
  background-color: ${props => props.isUser ? '#e6f7f2' : 'white'};
  padding: 12px 15px;
  border-radius: ${props => props.isUser ? '15px 15px 0 15px' : '15px 15px 15px 0'};
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
  order: ${props => props.isUser ? 1 : 0};
  max-width: 80%;
`;

const MessageText = styled.p`
  margin: 0;
  color: var(--dark-blue);
  line-height: 1.5;
`;

const QuestionButtons = styled.div`
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  margin-top: 10px;
`;

const QuestionButton = styled.button`
  background-color: var(--white);
  border: 1px solid var(--primary-purple);
  color: var(--primary-purple);
  padding: 8px 15px;
  border-radius: 20px;
  cursor: pointer;
  transition: var(--transition);
  font-size: 14px;
  
  &:hover {
    background-color: var(--primary-purple);
    color: var(--white);
  }
`;

const ChatFooter = styled.div`
  padding: 15px 20px;
  border-top: 1px solid #f0f0f0;
  display: flex;
`;

const ChatInput = styled.input`
  flex: 1;
  padding: 12px 15px;
  border: 1px solid #e1e1e1;
  border-radius: 25px;
  outline: none;
  font-size: 16px;
  
  &:focus {
    border-color: var(--primary-purple);
    box-shadow: 0 0 0 2px rgba(123, 47, 247, 0.1);
  }
`;

const ChatSendButton = styled.button`
  background: linear-gradient(135deg, var(--primary-blue), var(--primary-purple));
  color: var(--white);
  border: none;
  border-radius: 50%;
  width: 45px;
  height: 45px;
  margin-left: 10px;
  cursor: pointer;
  transition: var(--transition);
  display: flex;
  align-items: center;
  justify-content: center;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
  }
`;

const ChatDemo = () => {
  const [activeTab, setActiveTab] = useState('shoes');
  const [messages, setMessages] = useState([]);
  const [currentMessageIndex, setCurrentMessageIndex] = useState(0);
  const [isTyping, setIsTyping] = useState(false);
  const chatBodyRef = useRef(null);

  const shoesScenario = [
    { sender: 'bot', text: '–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –º–∞–≥–∞–∑–∏–Ω–∞ –∫—Ä–æ—Å—Å–æ–≤–æ–∫ Sneakers Hub. –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–µ–≥–æ–¥–Ω—è?', buttons: ['–•–æ—á—É –≤—ã–±—Ä–∞—Ç—å –∫—Ä–æ—Å—Å–æ–≤–∫–∏', '–†–∞—Å—Å–∫–∞–∂–∏ –æ –±—Ä–µ–Ω–¥–∞—Ö', '–ï—Å—Ç—å –ª–∏ —Å–∫–∏–¥–∫–∏?'] },
    { sender: 'user', text: '–•–æ—á—É –≤—ã–±—Ä–∞—Ç—å –∫—Ä–æ—Å—Å–æ–≤–∫–∏' },
    { sender: 'bot', text: '–û—Ç–ª–∏—á–Ω–æ! –î–ª—è –∫–∞–∫–∏—Ö —Ü–µ–ª–µ–π –≤–∞–º –Ω—É–∂–Ω—ã –∫—Ä–æ—Å—Å–æ–≤–∫–∏?', buttons: ['–î–ª—è –±–µ–≥–∞', '–î–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Å–∫–∏', '–î–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –∑–∞–ª–µ'] },
    { sender: 'user', text: '–î–ª—è –±–µ–≥–∞' },
    { sender: 'bot', text: '–•–æ—Ä–æ—à–∏–π –≤—ã–±–æ—Ä! –£ –Ω–∞—Å –µ—Å—Ç—å –æ—Ç–ª–∏—á–Ω—ã–µ –±–µ–≥–æ–≤—ã–µ –º–æ–¥–µ–ª–∏. –ö–∞–∫–æ–π —É –≤–∞—Å –±—é–¥–∂–µ—Ç?', buttons: ['–î–æ 10000 —Ç–µ–Ω–≥–µ', '10000-30000 —Ç–µ–Ω–≥–µ', '–ë–æ–ª–µ–µ 30000 —Ç–µ–Ω–≥–µ'] },
    { sender: 'user', text: '10000-30000 —Ç–µ–Ω–≥–µ' },
    { sender: 'bot', text: '–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –ü–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É—é –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤ –≤–∞—à–µ–º –±—é–¥–∂–µ—Ç–µ. –ö–∞–∫–æ–π —Ä–∞–∑–º–µ—Ä –æ–±—É–≤–∏ –≤—ã –Ω–æ—Å–∏—Ç–µ?', buttons: ['41', '42', '43', '–î—Ä—É–≥–æ–π'] },
    { sender: 'user', text: '42' },
    { sender: 'bot', text: '–û—Ç–ª–∏—á–Ω–æ! –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è –≤–∞—Å:\n\n1. Nike Air Zoom Pegasus 38 - 25 900 —Ç–µ–Ω–≥–µ\n2. Adidas Supernova - 23 500 —Ç–µ–Ω–≥–µ\n3. Puma Velocity Nitro - 22 800 —Ç–µ–Ω–≥–µ\n\n–í—Å–µ –º–æ–¥–µ–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Ä–∞–∑–º–µ—Ä–µ 42 –∏ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –±–µ–≥–∞. –ö–∞–∫–∞—è –∏–∑ –Ω–∏—Ö –≤–∞—Å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∞?', buttons: ['Nike Air Zoom Pegasus 38', 'Adidas Supernova', 'Puma Velocity Nitro', '–ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ'] },
    { sender: 'user', text: 'Nike Air Zoom Pegasus 38' },
    { sender: 'bot', text: '–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! Nike Air Zoom Pegasus 38 ‚Äî —ç—Ç–æ –ª–µ–≥–∫–∏–µ –∏ –æ—Ç–∑—ã–≤—á–∏–≤—ã–µ –±–µ–≥–æ–≤—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ —Å –∞–º–æ—Ä—Ç–∏–∑–∞—Ü–∏–µ–π Zoom Air, –∫–æ—Ç–æ—Ä–∞—è –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –º—è–≥–∫–æ—Å—Ç—å –∏ —É–ø—Ä—É–≥–æ—Å—Ç—å –ø—Ä–∏ –∫–∞–∂–¥–æ–º —à–∞–≥–µ. –û–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ü–≤–µ—Ç–∞—Ö. –ö–∞–∫–æ–π —Ü–≤–µ—Ç –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?', buttons: ['–ß–µ—Ä–Ω—ã–π', '–ë–µ–ª—ã–π', '–°–∏–Ω–∏–π', '–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ü–≤–µ—Ç–∞'] },
    { sender: 'user', text: '–ß–µ—Ä–Ω—ã–π' },
    { sender: 'bot', text: '–°—É–ø–µ—Ä! Nike Air Zoom Pegasus 38 –≤ —á–µ—Ä–Ω–æ–º —Ü–≤–µ—Ç–µ –æ—Ç–ª–∏—á–Ω–æ —Å–º–æ—Ç—Ä–∏—Ç—Å—è –∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –ø–æ–¥–æ–π–¥–µ—Ç –¥–ª—è –ª—é–±–æ–≥–æ –Ω–∞—Ä—è–¥–∞. –•–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –∏–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã?', buttons: ['–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', '–ï—Å—Ç—å –ª–∏ –≤ –Ω–∞–ª–∏—á–∏–∏ —Å–µ–π—á–∞—Å?', '–ú–æ–∂–Ω–æ –ª–∏ –ø—Ä–∏–º–µ—Ä–∏—Ç—å?'] },
    { sender: 'user', text: '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑' },
    { sender: 'bot', text: '–û—Ç–ª–∏—á–Ω–æ! –Ø –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –≤–∞—à—É –∫–æ—Ä–∑–∏–Ω—É —Å Nike Air Zoom Pegasus 38, —á–µ—Ä–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞, —Ä–∞–∑–º–µ—Ä 42, —Ü–µ–Ω–∞ 25 900 —Ç–µ–Ω–≥–µ. –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –∫ –æ–ø–ª–∞—Ç–µ. –°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä Sneakers Hub! üòä', buttons: ['–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥'] }
  ];

  const assistantScenario = [
    { sender: 'bot', text: '–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –î–∂–∞—Ä–≤–∏—Å. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–µ–≥–æ–¥–Ω—è?', buttons: ['–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–Ω—è', '–ù–∞–ø–æ–º–Ω–∏—Ç—å –æ –≤—Å—Ç—Ä–µ—á–µ', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–º–Ω—ã–º –¥–æ–º–æ–º'] },
    { sender: 'user', text: '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–Ω—è' },
    { sender: 'bot', text: '–° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–º–æ–≥—É –≤–∞–º —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–µ–Ω—å. –ö–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —É –≤–∞—Å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω?', buttons: ['–†–∞–±–æ—á–∏–π –¥–µ–Ω—å', '–í—ã—Ö–æ–¥–Ω–æ–π', '–°–º–µ—à–∞–Ω–Ω—ã–π'] },
    { sender: 'user', text: '–†–∞–±–æ—á–∏–π –¥–µ–Ω—å' },
    { sender: 'bot', text: '–ü–æ–Ω—è—Ç–Ω–æ. –Ø –ø—Ä–æ–≤–µ—Ä–∏–ª –≤–∞—à –∫–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è. –£ –≤–∞—Å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –≤—Å—Ç—Ä–µ—á–∏:\n\n9:00 - –ö–æ–º–∞–Ω–¥–Ω—ã–π –º–∏—Ç–∏–Ω–≥\n12:30 - –û–±–µ–¥ —Å –∫–ª–∏–µ–Ω—Ç–æ–º\n15:00 - –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞\n\n–•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —è –≤–Ω–µ—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤–∏–ª —á—Ç–æ-—Ç–æ –≤ –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?', buttons: ['–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É', '–ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Å—Ç—Ä–µ—á—É', '–ù–∞–ø–æ–º–Ω–∏—Ç—å –æ –≤—Å—Ç—Ä–µ—á–µ'] },
    { sender: 'user', text: '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É' },
    { sender: 'bot', text: '–ö–æ–Ω–µ—á–Ω–æ! –ö–∞–∫—É—é –∑–∞–¥–∞—á—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?', buttons: ['–°–ø–æ—Ä—Ç–∑–∞–ª –ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã', '–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã', '–ü–æ–∑–≤–æ–Ω–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—è–º'] },
    { sender: 'user', text: '–°–ø–æ—Ä—Ç–∑–∞–ª –ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã' },
    { sender: 'bot', text: '–í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–µ—â–µ–Ω–∏–µ —Å–ø–æ—Ä—Ç–∑–∞–ª–∞?', buttons: ['18:00', '19:00', '20:00'] },
    { sender: 'user', text: '18:00' },
    { sender: 'bot', text: '–î–æ–±–∞–≤–∏–ª –≤ –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ "–°–ø–æ—Ä—Ç–∑–∞–ª" –Ω–∞ 18:00. –í–∞—à–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n9:00 - –ö–æ–º–∞–Ω–¥–Ω—ã–π –º–∏—Ç–∏–Ω–≥\n12:30 - –û–±–µ–¥ —Å –∫–ª–∏–µ–Ω—Ç–æ–º\n15:00 - –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞\n18:00 - –°–ø–æ—Ä—Ç–∑–∞–ª\n\n–•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —è —É—Å—Ç–∞–Ω–æ–≤–∏–ª –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è?', buttons: ['–î–∞, –∑–∞ 30 –º–∏–Ω—É—Ç', '–î–∞, –∑–∞ 1 —á–∞—Å', '–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ'] },
    { sender: 'user', text: '–î–∞, –∑–∞ 30 –º–∏–Ω—É—Ç' },
    { sender: 'bot', text: '–û—Ç–ª–∏—á–Ω–æ! –Ø —É—Å—Ç–∞–Ω–æ–≤–∏–ª –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ 30 –º–∏–Ω—É—Ç –¥–æ –∫–∞–∂–¥–æ–≥–æ —Å–æ–±—ã—Ç–∏—è. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –¥–æ—Ä–æ–≥–∞ –¥–æ —Å–ø–æ—Ä—Ç–∑–∞–ª–∞ –≤ —ç—Ç–æ –≤—Ä–µ–º—è –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –æ–∫–æ–ª–æ 25 –º–∏–Ω—É—Ç –∏–∑-–∑–∞ –ø—Ä–æ–±–æ–∫. –•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —è –ø—Ä–æ–ª–æ–∂–∏–ª –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç?', buttons: ['–î–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞', '–ù–µ—Ç, —è –∑–Ω–∞—é –¥–æ—Ä–æ–≥—É'] },
    { sender: 'user', text: '–î–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞' },
    { sender: 'bot', text: '–Ø –ø—Ä–æ–ª–æ–∂–∏–ª –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –æ—Ç –≤–∞—à–µ–≥–æ –æ—Ñ–∏—Å–∞ –¥–æ —Å–ø–æ—Ä—Ç–∑–∞–ª–∞. –í 17:30 —è –æ—Ç–ø—Ä–∞–≤–ª—é –≤–∞–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–æ–π –∏ —Ç–µ–∫—É—â–µ–π —Å–∏—Ç—É–∞—Ü–∏–µ–π –Ω–∞ –¥–æ—Ä–æ–≥–∞—Ö. –ß—Ç–æ-–Ω–∏–±—É–¥—å –µ—â–µ, —á–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–µ–≥–æ–¥–Ω—è?', buttons: ['–í–∫–ª—é—á–∏—Ç—å –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –¥–æ–º–∞ –∫ –ø—Ä–∏—Ö–æ–¥—É', '–ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏', '–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ'] },
    { sender: 'user', text: '–í–∫–ª—é—á–∏—Ç—å –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –¥–æ–º–∞ –∫ –ø—Ä–∏—Ö–æ–¥—É' },
    { sender: 'bot', text: '–Ø –Ω–∞—Å—Ç—Ä–æ—é –≤–∞—à —É–º–Ω—ã–π –¥–æ–º —Ç–∞–∫, —á—Ç–æ–±—ã –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –≤–∫–ª—é—á–∏–ª—Å—è –≤ 19:30, –∫ –≤–∞—à–µ–º—É –ø—Ä–∏—Ö–æ–¥—É –∏–∑ —Å–ø–æ—Ä—Ç–∑–∞–ª–∞. –ö–∞–∫—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å?', buttons: ['22¬∞C', '24¬∞C', '20¬∞C'] },
    { sender: 'user', text: '22¬∞C' },
    { sender: 'bot', text: '–ì–æ—Ç–æ–≤–æ! –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –≤–∫–ª—é—á–∏—Ç—Å—è –≤ 19:30 –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É 22¬∞C. –¢–∞–∫–∂–µ —è –≤–∫–ª—é—á—É –ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ –≤ –≥–æ—Å—Ç–∏–Ω–æ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏. –ß—Ç–æ-–Ω–∏–±—É–¥—å –µ—â–µ?', buttons: ['–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', '–ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –∫–æ—Ñ–µ –∫ –ø—Ä–∏—Ö–æ–¥—É', '–í–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É'] },
    { sender: 'user', text: '–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ' },
    { sender: 'bot', text: '–û—Ç–ª–∏—á–Ω–æ! –í–∞—à –¥–µ–Ω—å —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω. –Ø –±—É–¥—É –¥–µ—Ä–∂–∞—Ç—å –≤–∞—Å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π –∏ –ø–æ–º–æ–≥—É –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –¥–µ–Ω—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ. –•–æ—Ä–æ—à–µ–≥–æ –≤–∞–º –¥–Ω—è! üòä', buttons: ['–°–ø–∞—Å–∏–±–æ, –î–∂–∞—Ä–≤–∏—Å!', '–ü–æ–∫–∞–∑–∞—Ç—å –º–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –µ—â–µ —Ä–∞–∑'] }
  ];

  useEffect(() => {
    resetChat();
  }, [activeTab]);

  useEffect(() => {
    if (chatBodyRef.current) {
      chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;
    }
  }, [messages]);

  const resetChat = () => {
    setMessages([]);
    setCurrentMessageIndex(0);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞
    const scenario = activeTab === 'shoes' ? shoesScenario : assistantScenario;
    setTimeout(() => {
      setMessages([scenario[0]]);
      setCurrentMessageIndex(1);
    }, 500);
  };

  const handleButtonClick = (text) => {
    const scenario = activeTab === 'shoes' ? shoesScenario : assistantScenario;
    
    if (currentMessageIndex < scenario.length) {
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      setMessages(prev => [...prev, { sender: 'user', text, isNew: true }]);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "–ø–µ—á–∞—Ç–∞–µ—Ç..."
      setIsTyping(true);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –∑–∞–¥–µ—Ä–∂–∫—É
      setTimeout(() => {
        setIsTyping(false);
        if (currentMessageIndex < scenario.length) {
          setMessages(prev => [...prev, { ...scenario[currentMessageIndex], isNew: true }]);
          setCurrentMessageIndex(currentMessageIndex + 1);
        }
      }, 1500);
    }
  };

  return (
    <ChatDemoSection id="chat-demo">
      <Container>
        <SectionTitle>
          <Title>–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –ò–ò</Title>
          <Subtitle>
            –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞—à–∏ –ò–ò-—Ä–µ—à–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö
          </Subtitle>
        </SectionTitle>
        
        <TabsContainer>
          <TabButton 
            active={activeTab === 'shoes'} 
            onClick={() => setActiveTab('shoes')}
          >
            –ò–ò –±–æ—Ç –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
          </TabButton>
          <TabButton 
            active={activeTab === 'assistant'} 
            onClick={() => setActiveTab('assistant')}
          >
            –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç
          </TabButton>
        </TabsContainer>
        
        <ChatContainer>
          <ChatHeader>
            <ChatHeaderTitle>
              {activeTab === 'shoes' ? '–ß–∞—Ç —Å –±–æ—Ç–æ–º Sneakers Hub' : '–ß–∞—Ç —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º –î–∂–∞—Ä–≤–∏—Å'}
            </ChatHeaderTitle>
          </ChatHeader>
          
          <ChatBody ref={chatBodyRef}>
            {messages.map((msg, index) => (
              <Message key={index} isNew={msg.isNew}>
                {msg.sender === 'bot' ? (
                  <BotAvatar>
                    <BotIcon>{activeTab === 'shoes' ? 'üëü' : 'ü§ñ'}</BotIcon>
                  </BotAvatar>
                ) : (
                  <UserAvatar>
                    <UserIcon>üë§</UserIcon>
                  </UserAvatar>
                )}
                
                <MessageContent isUser={msg.sender === 'user'}>
                  <MessageText>{msg.text}</MessageText>
                  
                  {msg.buttons && (
                    <QuestionButtons>
                      {msg.buttons.map((btn, btnIndex) => (
                        <QuestionButton 
                          key={btnIndex} 
                          onClick={() => handleButtonClick(btn)}
                        >
                          {btn}
                        </QuestionButton>
                      ))}
                    </QuestionButtons>
                  )}
                </MessageContent>
              </Message>
            ))}
            
            {isTyping && (
              <Message>
                <BotAvatar>
                  <BotIcon>{activeTab === 'shoes' ? 'üëü' : 'ü§ñ'}</BotIcon>
                </BotAvatar>
                <MessageContent>
                  <MessageText>–ø–µ—á–∞—Ç–∞–µ—Ç...</MessageText>
                </MessageContent>
              </Message>
            )}
          </ChatBody>
          
          <ChatFooter>
            <ChatInput 
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..." 
              disabled
            />
            <ChatSendButton>
              ‚û§
            </ChatSendButton>
          </ChatFooter>
        </ChatContainer>
      </Container>
    </ChatDemoSection>
  );
};

export default ChatDemo;
