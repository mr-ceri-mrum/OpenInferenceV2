import React, { useState } from 'react';
import styled from 'styled-components';
import Container from '../common/Container';
import Button from '../common/Button';
import ContactForm from '../common/ContactForm';

const ServiceDetailsSection = styled.section`
  padding: 100px 0;
  background-color: var(--white);
`;

const SectionTitle = styled.div`
  text-align: center;
  margin-bottom: 60px;
`;

const Title = styled.h2`
  font-size: 36px;
  font-weight: 700;
  color: var(--dark-blue);
  margin-bottom: 15px;
`;

const Subtitle = styled.p`
  color: #666;
  max-width: 700px;
  margin: 0 auto;
`;

const TabsContainer = styled.div`
  display: flex;
  justify-content: center;
  margin-bottom: 40px;
  
  @media (max-width: 768px) {
    flex-direction: column;
    align-items: center;
  }
`;

const TabButton = styled.button`
  background: ${props => props.active ? 'linear-gradient(135deg, var(--primary-blue), var(--primary-purple))' : 'var(--white)'};
  color: ${props => props.active ? 'var(--white)' : 'var(--dark-blue)'};
  border: 2px solid ${props => props.active ? 'transparent' : '#e1e1e1'};
  border-radius: 30px;
  padding: 12px 30px;
  font-size: 16px;
  font-weight: 600;
  margin: 0 10px;
  cursor: pointer;
  transition: var(--transition);
  
  &:hover {
    background: ${props => props.active ? 'linear-gradient(135deg, var(--primary-blue), var(--primary-purple))' : '#f5f5f5'};
  }
  
  @media (max-width: 768px) {
    margin: 10px 0;
    width: 80%;
  }
`;

const ContentContainer = styled.div`
  max-width: 1000px;
  margin: 0 auto;
`;

const TabContent = styled.div`
  display: ${props => props.active ? 'block' : 'none'};
`;

const FlexContainer = styled.div`
  display: flex;
  align-items: center;
  margin-bottom: 40px;
  
  @media (max-width: 992px) {
    flex-direction: column;
  }
`;

const ImageContainer = styled.div`
  flex: 1;
  padding: 0 20px;
  
  @media (max-width: 992px) {
    margin-bottom: 30px;
    order: ${props => props.reverse ? 2 : 1};
  }
`;

const TextContainer = styled.div`
  flex: 1;
  padding: 0 20px;
  
  @media (max-width: 992px) {
    order: ${props => props.reverse ? 1 : 2};
  }
`;

const ContentTitle = styled.h3`
  font-size: 28px;
  font-weight: 600;
  margin-bottom: 20px;
  color: var(--dark-blue);
`;

const Description = styled.p`
  color: #666;
  margin-bottom: 20px;
  line-height: 1.8;
`;

const FeaturesList = styled.ul`
  margin: 20px 0;
`;

const FeatureItem = styled.li`
  margin-bottom: 15px;
  display: flex;
  align-items: flex-start;
  
  &:before {
    content: "‚úì";
    color: var(--primary-purple);
    font-weight: bold;
    margin-right: 10px;
    flex-shrink: 0;
  }
`;

const PlaceholderImage = styled.div`
  width: 100%;
  height: 300px;
  background: linear-gradient(135deg, #e0e0e0, #f0f0f0);
  border-radius: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 48px;
  color: var(--primary-purple);
`;

const ServiceDetails = () => {
  const [activeTab, setActiveTab] = useState('chatbots');
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [selectedService, setSelectedService] = useState('');

  const handleTabChange = (tab) => {
    setActiveTab(tab);
  };

  const openContactModal = (service) => {
    setSelectedService(service);
    setIsModalOpen(true);
  };

  return (
    <ServiceDetailsSection id="service-details">
      <Container>
        <SectionTitle>
          <Title>–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö</Title>
          <Subtitle>
            –£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –Ω–∞—à–∏ –ò–ò-—Ä–µ—à–µ–Ω–∏—è –º–æ–≥—É—Ç —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à –±–∏–∑–Ω–µ—Å –∏ –ø–æ–≤—ã—Å–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
          </Subtitle>
        </SectionTitle>
        
        <TabsContainer>
          <TabButton 
            active={activeTab === 'chatbots'} 
            onClick={() => handleTabChange('chatbots')}
          >
            –ò–ò –±–æ—Ç—ã –¥–ª—è –ø—Ä–æ–¥–∞–∂
          </TabButton>
          <TabButton 
            active={activeTab === 'assistants'} 
            onClick={() => handleTabChange('assistants')}
          >
            –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ò–ò –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã
          </TabButton>
        </TabsContainer>
        
        <ContentContainer>
          <TabContent active={activeTab === 'chatbots'}>
            <FlexContainer>
              <TextContainer>
                <ContentTitle>–ò–ò-–±–æ—Ç—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–¥–∞–∂ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π</ContentTitle>
                <Description>
                  –ù–∞—à–∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ —á–∞—Ç-–±–æ—Ç—ã —Å–ø–æ—Å–æ–±–Ω—ã –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≤—ã—Å–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–∞—à–∏—Ö –ø—Ä–æ–¥–∞–∂ –∏ —É–ª—É—á—à–∏—Ç—å –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤. –û–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã 24/7 –∏ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –æ—Ç–≤–µ—á–∞—é—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–≤—ã—Å–∏—Ç—å –∫–æ–Ω–≤–µ—Ä—Å–∏—é –∏ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤.
                </Description>
                <FeaturesList>
                  <FeatureItem>–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏</FeatureItem>
                  <FeatureItem>–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM-—Å–∏—Å—Ç–µ–º–∞–º–∏ –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –∫–æ–º–º–µ—Ä—Ü–∏–∏</FeatureItem>
                  <FeatureItem>–ê–Ω–∞–ª–∏–∑ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π</FeatureItem>
                  <FeatureItem>–ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ—Ö–≤–∞—Ç–∞</FeatureItem>
                  <FeatureItem>–õ–µ–≥–∫–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞—Ç—Ä–∞—Ç –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª</FeatureItem>
                </FeaturesList>
                <Button onClick={() => openContactModal('–ò–ò-–±–æ—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂')}>–ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</Button>
              </TextContainer>
              <ImageContainer>
                <PlaceholderImage>ü§ñ</PlaceholderImage>
              </ImageContainer>
            </FlexContainer>
          </TabContent>
          
          <TabContent active={activeTab === 'assistants'}>
            <FlexContainer>
              <ImageContainer reverse>
                <PlaceholderImage>üß†</PlaceholderImage>
              </ImageContainer>
              <TextContainer reverse>
                <ContentTitle>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã (–∫–∞–∫ –î–∂–∞—Ä–≤–∏—Å)</ContentTitle>
                <Description>
                  –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ —Å–µ–±–µ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–Ω–∏–º–∞–µ—Ç –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è, –ø–æ–º–æ–≥–∞–µ—Ç –≤ —Ä–µ—à–µ–Ω–∏–∏ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞—à–∏–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º. –ù–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à—É –∂–∏–∑–Ω—å –ø—Ä–æ—â–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ.
                </Description>
                <FeaturesList>
                  <FeatureItem>–ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ</FeatureItem>
                  <FeatureItem>–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —É–º–Ω—ã–º –¥–æ–º–æ–º –∏ –æ—Ñ–∏—Å–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏</FeatureItem>
                  <FeatureItem>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ –∏ –≤—Å—Ç—Ä–µ—á–∞–º–∏</FeatureItem>
                  <FeatureItem>–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö</FeatureItem>
                  <FeatureItem>–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä—É—Ç–∏–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏</FeatureItem>
                </FeaturesList>
                <Button onClick={() => openContactModal('–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç')}>–ó–∞–∫–∞–∑–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É</Button>
              </TextContainer>
            </FlexContainer>
          </TabContent>
        </ContentContainer>
      </Container>
      
      <ContactForm 
        isOpen={isModalOpen} 
        onClose={() => setIsModalOpen(false)} 
        service={selectedService}
      />
    </ServiceDetailsSection>
  );
};

export default ServiceDetails;
